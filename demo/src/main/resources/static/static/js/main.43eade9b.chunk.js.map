{"version":3,"sources":["ErrorBoundary.js","services/executeRequest.js","services/studentController.js","services/studyGroupController.js","hooks/useForm.js","routes/Students/StudentsDialog.js","routes/Students/StudentsEditDialogContainer.js","routes/Students/StudentsAddDialogContainer.js","routes/Students/DropDownMenu.js","routes/Students/Students.js","routes/Students/StudentsContainer.js","routes/StudyGroups/StudyGroupsDialog.js","routes/StudyGroups/StudyGroupsEditDialogContainer.js","routes/StudyGroups/StudyGroupsAddDialogContainer.js","routes/StudyGroups/StudyGroups.js","routes/StudyGroups/StudyGroupsContainer.js","services/journalRecordController.js","routes/JournalRecords/JournalRecordsDialog.js","routes/JournalRecords/JournalRecordsEditDialogContainer.js","routes/JournalRecords/JournalRecordsAddDialogContainer.js","routes/JournalRecords/JournalRecords.js","routes/JournalRecords/JournalRecordsContainer.js","routes/StudentsJournal/StudentsJournal.js","routes/StudentsJournal/Filter.js","routes/StudentsJournal/StudentsJournalContainer.js","App.js","serviceWorker.js","index.js"],"names":["ErrorBoundary","props","state","hasError","this","children","error","React","Component","executeRequest","endpoint","rest","fetch","then","response","ok","json","catch","undefined","text","errorMessage","alert","console","studentController","create","student","method","body","JSON","stringify","headers","get","id","getAll","getAllByGroup","studyGroupId","update","transfer","delete","studyGroupController","studyGroup","useForm","initialInputs","action","useState","inputs","setInputs","handleChange","event","target","value","type","checked","name","handleSubmit","preventDefault","StudentsAddDialog","show","handleClose","Modal","onHide","Header","closeButton","Title","Body","Form","onSubmit","Group","controlId","Label","Control","surname","onChange","second_name","study_group_id","Footer","Button","variant","onClick","form","StudentsEditDialogContainer","handleSubmitProp","useEffect","StudentsDialog","StudentsAddDialogContainer","DropDownMenu","studentId","studyGroups","handleTransfer","availableStudyGroups","setAvailableStudyGroups","filter","Dropdown","Toggle","Menu","map","Item","key","Students","students","handleDelete","handleUpdate","handleCreation","editableStudent","setEditableStudent","show1","setShow1","handleShow1","show2","setShow2","Table","bordered","study_group","ButtonGroup","style","position","bottom","right","StudentsContainer","setStudents","setStudyGroups","result","newStudent","updatedStudent","StudyGroupsDialog","StudyGroupsEditDialogContainer","StudyGroupsAddDialog","StudyGroups","editableStudyGroup","setEditableStudyGroup","StudyGroupsContainer","newStudyGroup","journalRecordController","getAllByStudyGroup","JournalRecordsDialog","student_id","study_plan_id","Check","label","in_time","count","as","mark_id","JournalRecordsEditDialogContainer","journalRecord","JournalAddDialogContainer","JournalRecords","journalRecords","editableJournalRecord","setEditableJournalRecord","student_full_name","subject_short_name","exam_type","mark_name","JournalRecordsContainer","setJournalRecords","newJournalRecord","updatedJournalRecord","markColorsMap","5","4","3","2","з","н","StudentsJournal","studentsJournal","subjects","subject","studentRecord","examData","markValue","mark_value","examType","backgroundColor","fontSize","top","Filter","sort_option","StudentsJournalContainer","setStudentsJournal","sortedStudentsJournal","setSortedStudentsJournal","setSubjects","handleResult","studentsMap","subjectsMap","forEach","studentsMapRecord","marks_sum","Object","values","keys","log","sort","studentRecord1","studentRecord2","localeCompare","sortByName","slice","sortByMarksSum","App","className","Navbar","bg","expand","Brand","href","aria-controls","Collapse","Nav","Link","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.43eade9b.chunk.js","sourcesContent":["import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Что-то пошло не так.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","const API_ROOT = 'http://localhost:8080';\n\nconst executeRequest = (endpoint, rest) => {\n  return fetch(`${API_ROOT}${endpoint}`, {\n    ...rest\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw response;\n      } else {\n        return response.json();\n      }\n    })\n    .catch(error => {\n      if (error.ok !== undefined) {\n        error.text().then(errorMessage => {\n          alert(errorMessage);\n          console.error(errorMessage);\n        });\n      }\n    });\n};\n\nexport default executeRequest;\n","import executeRequest from './executeRequest';\n\nconst studentController = {\n  create: student =>\n    executeRequest('/students', {\n      method: 'POST',\n      body: JSON.stringify(student),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }),\n  get: id => executeRequest(`/students/${id}`),\n  getAll: () => executeRequest('/students'),\n  getAllByGroup: studyGroupId =>\n    executeRequest(`/students/study_group/${studyGroupId}`),\n  update: (id, student) =>\n    executeRequest(`/students/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(student),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }),\n  transfer: (id, studyGroupId) =>\n    executeRequest(`/students/transfer/${id}`, {\n      method: 'PUT',\n      body: studyGroupId,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }),\n  delete: id => executeRequest(`/students/${id}`, { method: 'DELETE' })\n};\n\nexport default studentController;\n","import executeRequest from './executeRequest';\n\nconst studyGroupController = {\n  create: studyGroup =>\n    executeRequest('/study_groups', {\n      method: 'POST',\n      body: JSON.stringify(studyGroup),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }),\n  getAll: () => executeRequest('/study_groups'),\n  update: (id, studyGroup) =>\n    executeRequest(`/study_groups/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(studyGroup),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }),\n  delete: id => executeRequest(`/study_groups/${id}`, { method: 'DELETE' })\n};\n\nexport default studyGroupController;\n","import React from 'react';\n\nexport default function useForm(initialInputs, action) {\n  const [inputs, setInputs] = React.useState(initialInputs);\n\n  const handleChange = event => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    setInputs({\n      ...inputs,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    if (typeof action === 'function') {\n      action();\n    }\n\n    event.preventDefault();\n  };\n\n  return {\n    inputs,\n    setInputs,\n    handleChange,\n    handleSubmit\n  };\n}\n","import React from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\n\nfunction StudentsAddDialog({\n  show,\n  handleClose,\n  inputs,\n  handleChange,\n  handleSubmit\n}) {\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Добавление / Редактирование</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form id=\"students-form\" onSubmit={handleSubmit}>\n          <Form.Group controlId=\"students-surname\">\n            <Form.Label>Фамилия</Form.Label>\n            <Form.Control\n              name=\"surname\"\n              value={inputs.surname}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"students-name\">\n            <Form.Label>Имя</Form.Label>\n            <Form.Control\n              name=\"name\"\n              value={inputs.name}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"students-second-name\">\n            <Form.Label>Отчество</Form.Label>\n            <Form.Control\n              name=\"second_name\"\n              value={inputs.second_name}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"students-study-group-id\">\n            <Form.Label>Id группы</Form.Label>\n            <Form.Control\n              name=\"study_group_id\"\n              value={inputs.study_group_id}\n              onChange={handleChange}\n            />\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Отмена\n        </Button>\n        <Button\n          type=\"submit\"\n          form=\"students-form\"\n          variant=\"primary\"\n          onClick={handleClose}\n        >\n          Сохранить\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default StudentsAddDialog;\n","import React from 'react';\nimport useForm from 'src/hooks/useForm';\nimport StudentsDialog from './StudentsDialog';\n\nfunction StudentsEditDialogContainer({\n  show,\n  student,\n  handleSubmit: handleSubmitProp,\n  ...rest\n}) {\n  const { inputs, setInputs, handleChange, handleSubmit } = useForm(\n    {\n      surname: '',\n      name: '',\n      second_name: '',\n      study_group_id: ''\n    },\n    () => {\n      handleSubmitProp({ id: student.id, ...inputs });\n    }\n  );\n\n  React.useEffect(() => {\n    if (show) {\n      setInputs(student);\n    }\n  }, [show, setInputs, student]);\n\n  return (\n    <StudentsDialog\n      show={show}\n      inputs={inputs}\n      handleChange={handleChange}\n      handleSubmit={handleSubmit}\n      {...rest}\n    />\n  );\n}\n\nexport default StudentsEditDialogContainer;\n","import React from 'react';\nimport useForm from 'src/hooks/useForm';\nimport StudentsDialog from './StudentsDialog';\n\nfunction StudentsAddDialogContainer({\n  show,\n  handleSubmit: handleSubmitProp,\n  ...rest\n}) {\n  const { inputs, handleChange, handleSubmit } = useForm(\n    {\n      surname: '',\n      name: '',\n      second_name: '',\n      study_group_id: ''\n    },\n    () => {\n      handleSubmitProp(inputs);\n    }\n  );\n\n  return (\n    <StudentsDialog\n      show={show}\n      inputs={inputs}\n      handleChange={handleChange}\n      handleSubmit={handleSubmit}\n      {...rest}\n    />\n  );\n}\n\nexport default StudentsAddDialogContainer;\n","import React from 'react';\nimport { Dropdown } from 'react-bootstrap';\n\nfunction DropDownMenu({\n  studentId,\n  studyGroupId,\n  studyGroups,\n  handleTransfer\n}) {\n  const [availableStudyGroups, setAvailableStudyGroups] = React.useState([]);\n\n  React.useEffect(() => {\n    setAvailableStudyGroups(\n      studyGroups.filter(studyGroup => studyGroup.id !== studyGroupId)\n    );\n  }, [studyGroups, studyGroupId]);\n\n  return (\n    <Dropdown>\n      <Dropdown.Toggle variant=\"link\">Перевести в</Dropdown.Toggle>\n      <Dropdown.Menu>\n        {availableStudyGroups.map(studyGroup => (\n          <Dropdown.Item\n            key={studyGroup.id}\n            onClick={handleTransfer(studentId, studyGroup.id)}\n          >\n            {studyGroup.name}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\nexport default DropDownMenu;\n","import React, { Fragment } from 'react';\nimport { Table, ButtonGroup, Button } from 'react-bootstrap';\nimport StudentsEditDialog from './StudentsEditDialogContainer';\nimport StudentsAddDialog from './StudentsAddDialogContainer';\nimport DropDownMenu from './DropDownMenu';\n\nfunction Students({\n  students,\n  studyGroups,\n  handleDelete,\n  handleUpdate,\n  handleCreation,\n  handleTransfer\n}) {\n  const [editableStudent, setEditableStudent] = React.useState();\n\n  const [show1, setShow1] = React.useState(false);\n\n  const handleClose1 = () => setShow1(false);\n\n  const handleShow1 = student => () => {\n    setShow1(true);\n    setEditableStudent(student);\n  };\n\n  const [show2, setShow2] = React.useState(false);\n\n  const handleClose2 = () => setShow2(false);\n\n  const handleShow2 = () => {\n    setShow2(true);\n  };\n\n  return (\n    <Fragment>\n      <Table bordered>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>ФИО</th>\n            <th>Группа</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {students.map(student => (\n            <tr key={student.id}>\n              <td>{student.id}</td>\n              <td>{`${student.surname} ${student.name} ${student.second_name}`}</td>\n              <td>{student.study_group}</td>\n              <td>\n                <ButtonGroup>\n                  <Button onClick={handleShow1(student)}>Редактировать</Button>\n                  <Button onClick={handleDelete(student.id)} variant=\"danger\">\n                    Удалить\n                  </Button>\n                  <DropDownMenu\n                    studentId={student.id}\n                    studyGroupId={student.study_group_id}\n                    studyGroups={studyGroups}\n                    handleTransfer={handleTransfer}\n                  />\n                </ButtonGroup>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <Button\n        onClick={handleShow2}\n        style={{ position: 'fixed', bottom: 24, right: 24 }}\n      >\n        Создать\n      </Button>\n      <StudentsEditDialog\n        show={show1}\n        handleClose={handleClose1}\n        student={editableStudent}\n        handleSubmit={handleUpdate}\n      />\n      <StudentsAddDialog\n        show={show2}\n        handleClose={handleClose2}\n        handleSubmit={handleCreation}\n      />\n    </Fragment>\n  );\n}\n\nexport default Students;\n","import React from 'react';\nimport studentController from 'src/services/studentController';\nimport studyGroupController from 'src/services/studyGroupController';\nimport Students from './Students';\n\nfunction StudentsContainer() {\n  const [students, setStudents] = React.useState([]);\n  const [studyGroups, setStudyGroups] = React.useState([]);\n\n  React.useEffect(() => {\n    studentController.getAll().then(students => {\n      if (students) {\n        setStudents(students);\n      }\n    });\n\n    studyGroupController.getAll().then(studyGroups => {\n      setStudyGroups(studyGroups);\n    });\n  }, []);\n\n  const handleDelete = id => () => {\n    studentController.delete(id).then(result => {\n      if (result === 0) {\n        setStudents(students.filter(student => student.id !== id));\n      }\n    });\n  };\n\n  const handleUpdate = newStudent => {\n    studentController.update(newStudent.id, newStudent).then(result => {\n      if (result === 0) {\n        studentController.get(newStudent.id).then(updatedStudent => {\n          setStudents(\n            students.map(student => {\n              if (student.id === updatedStudent.id) {\n                return updatedStudent;\n              }\n              return student;\n            })\n          );\n        });\n      }\n    });\n  };\n\n  const handleCreation = newStudent => {\n    studentController.create(newStudent).then(id => {\n      if (id !== undefined) {\n        studentController.get(id).then(student => {\n          setStudents([...students, student]);\n        });\n      }\n    });\n  };\n\n  const handleTransfer = (id, studyGroupId) => () => {\n    studentController.transfer(id, studyGroupId).then(result => {\n      if (result === 0) {\n        studentController.get(id).then(updatedStudent => {\n          setStudents(\n            students.map(student => {\n              if (student.id === updatedStudent.id) {\n                return updatedStudent;\n              }\n              return student;\n            })\n          );\n        });\n      }\n    });\n  };\n\n  return (\n    <Students\n      students={students}\n      studyGroups={studyGroups}\n      handleDelete={handleDelete}\n      handleUpdate={handleUpdate}\n      handleCreation={handleCreation}\n      handleTransfer={handleTransfer}\n    />\n  );\n}\n\nexport default StudentsContainer;\n","import React from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\n\nfunction StudyGroupsDialog({\n  show,\n  handleClose,\n  inputs,\n  handleChange,\n  handleSubmit\n}) {\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Добавление / Редактирование</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form id=\"study-groups-form\" onSubmit={handleSubmit}>\n          <Form.Group controlId=\"study-groups-name\">\n            <Form.Label>Название</Form.Label>\n            <Form.Control\n              name=\"name\"\n              value={inputs.name}\n              onChange={handleChange}\n            />\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Отмена\n        </Button>\n        <Button\n          type=\"submit\"\n          form=\"study-groups-form\"\n          variant=\"primary\"\n          onClick={handleClose}\n        >\n          Сохранить\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default StudyGroupsDialog;\n","import React from 'react';\nimport useForm from 'src/hooks/useForm';\nimport StudyGroupsDialog from './StudyGroupsDialog';\n\nfunction StudyGroupsEditDialogContainer({\n  show,\n  studyGroup,\n  handleSubmit: handleSubmitProp,\n  ...rest\n}) {\n  const { inputs, setInputs, handleChange, handleSubmit } = useForm(\n    {\n      name: ''\n    },\n    () => {\n      handleSubmitProp({ id: studyGroup.id, ...inputs });\n    }\n  );\n\n  React.useEffect(() => {\n    if (show) {\n      setInputs(studyGroup);\n    }\n  }, [show, setInputs, studyGroup]);\n\n  return (\n    <StudyGroupsDialog\n      show={show}\n      inputs={inputs}\n      handleChange={handleChange}\n      handleSubmit={handleSubmit}\n      {...rest}\n    />\n  );\n}\n\nexport default StudyGroupsEditDialogContainer;\n","import React from 'react';\nimport useForm from 'src/hooks/useForm';\nimport StudyGroupsDialog from './StudyGroupsDialog';\n\nfunction StudyGroupsAddDialog({\n  show,\n  handleSubmit: handleSubmitProp,\n  ...rest\n}) {\n  const { inputs, handleChange, handleSubmit } = useForm(\n    {\n      name: ''\n    },\n    () => {\n      handleSubmitProp(inputs);\n    }\n  );\n\n  return (\n    <StudyGroupsDialog\n      show={show}\n      inputs={inputs}\n      handleChange={handleChange}\n      handleSubmit={handleSubmit}\n      {...rest}\n    />\n  );\n}\n\nexport default StudyGroupsAddDialog;\n","import React, { Fragment } from 'react';\nimport { Table, ButtonGroup, Button } from 'react-bootstrap';\nimport StudyGroupsEditDialog from './StudyGroupsEditDialogContainer';\nimport StudyGroupsAddDialog from './StudyGroupsAddDialogContainer';\n\nfunction StudyGroups({\n  studyGroups,\n  handleDelete,\n  handleUpdate,\n  handleCreation\n}) {\n  const [editableStudyGroup, setEditableStudyGroup] = React.useState();\n\n  const [show1, setShow1] = React.useState(false);\n\n  const handleClose1 = () => setShow1(false);\n\n  const handleShow1 = studyGroup => () => {\n    setShow1(true);\n    setEditableStudyGroup(studyGroup);\n  };\n\n  const [show2, setShow2] = React.useState(false);\n\n  const handleClose2 = () => setShow2(false);\n\n  const handleShow2 = () => {\n    setShow2(true);\n  };\n\n  return (\n    <Fragment>\n      <Table bordered>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Название</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {studyGroups.map(studyGroup => (\n            <tr key={studyGroup.id}>\n              <td>{studyGroup.id}</td>\n              <td>{studyGroup.name}</td>\n              <td>\n                <ButtonGroup>\n                  <Button onClick={handleShow1(studyGroup)}>\n                    Редактировать\n                  </Button>\n                  <Button\n                    onClick={handleDelete(studyGroup.id)}\n                    variant=\"danger\"\n                  >\n                    Удалить\n                  </Button>\n                </ButtonGroup>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <Button\n        onClick={handleShow2}\n        style={{ position: 'fixed', bottom: 24, right: 24 }}\n      >\n        Создать\n      </Button>\n      <StudyGroupsEditDialog\n        show={show1}\n        handleClose={handleClose1}\n        studyGroup={editableStudyGroup}\n        handleSubmit={handleUpdate}\n      />\n      <StudyGroupsAddDialog\n        show={show2}\n        handleClose={handleClose2}\n        handleSubmit={handleCreation}\n      />\n    </Fragment>\n  );\n}\n\nexport default StudyGroups;\n","import React from 'react';\nimport studyGroupController from 'src/services/studyGroupController';\nimport StudyGroups from './StudyGroups';\n\nfunction StudyGroupsContainer() {\n  const [studyGroups, setStudyGroups] = React.useState([]);\n\n  React.useEffect(() => {\n    studyGroupController.getAll().then(studyGroups => {\n      if (studyGroups) {\n        setStudyGroups(studyGroups);\n      }\n    });\n  }, []);\n\n  const handleDelete = id => () => {\n    studyGroupController.delete(id).then(result => {\n      if (result === 0) {\n        setStudyGroups(studyGroups.filter(studyGroup => studyGroup.id !== id));\n      }\n    });\n  };\n\n  const handleUpdate = newStudyGroup => {\n    studyGroupController\n      .update(newStudyGroup.id, newStudyGroup)\n      .then(result => {\n        if (result === 0) {\n          setStudyGroups(\n            studyGroups.map(studyGroup => {\n              if (studyGroup.id === newStudyGroup.id) {\n                return newStudyGroup;\n              }\n              return studyGroup;\n            })\n          );\n        }\n      });\n  };\n\n  const handleCreation = newStudyGroup => {\n    studyGroupController.create(newStudyGroup).then(id => {\n      if (id !== undefined) {\n        setStudyGroups([...studyGroups, { id, ...newStudyGroup }]);\n      }\n    });\n  };\n\n  return (\n    <StudyGroups\n      studyGroups={studyGroups}\n      handleDelete={handleDelete}\n      handleUpdate={handleUpdate}\n      handleCreation={handleCreation}\n    />\n  );\n}\n\nexport default StudyGroupsContainer;\n","import executeRequest from './executeRequest';\n\nconst journalRecordController = {\n  create: student =>\n    executeRequest('/journal', {\n      method: 'POST',\n      body: JSON.stringify(student),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }),\n  get: id => executeRequest(`/journal/${id}`),\n  getAll: () => executeRequest('/journal'),\n  getAllByStudyGroup: id => executeRequest(`/journal/study_group/${id}`),\n  update: (id, student) =>\n    executeRequest(`/journal/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(student),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }),\n  delete: id => executeRequest(`/journal/${id}`, { method: 'DELETE' })\n};\n\nexport default journalRecordController;\n","import React from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\n\nfunction JournalRecordsDialog({\n  show,\n  handleClose,\n  inputs,\n  handleChange,\n  handleSubmit\n}) {\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Добавление / Редактирование</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form id=\"journal-form\" onSubmit={handleSubmit}>\n          <Form.Group controlId=\"journal-student-id\">\n            <Form.Label>Id студента</Form.Label>\n            <Form.Control\n              name=\"student_id\"\n              value={inputs.student_id}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"journal-study-plan-id\">\n            <Form.Label>Id учебного плана</Form.Label>\n            <Form.Control\n              name=\"study_plan_id\"\n              value={inputs.study_plan_id}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"journal-in-time\">\n            <Form.Check\n              name=\"in_time\"\n              type=\"checkbox\"\n              id={`journal-in-time-checkbox`}\n              label=\"Вовремя\"\n              checked={inputs.in_time}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"journal-count\">\n            <Form.Label>Количество пересдач</Form.Label>\n            <Form.Control\n              name=\"count\"\n              value={inputs.count}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"journal-mark-id\">\n            <Form.Label>Оценка</Form.Label>\n            <Form.Control\n              name=\"mark_id\"\n              as=\"select\"\n              onChange={handleChange}\n              value={inputs.mark_id}\n            >\n              <option value=\"1\">Отлично</option>\n              <option value=\"2\">Хорошо</option>\n              <option value=\"3\">Удовлетворительно</option>\n              <option value=\"4\">Неудовлетворительно</option>\n              <option value=\"5\">Зачет</option>\n              <option value=\"6\">Незачет</option>\n              <option value=\"7\">Неявка</option>\n            </Form.Control>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Отмена\n        </Button>\n        <Button\n          type=\"submit\"\n          form=\"journal-form\"\n          variant=\"primary\"\n          onClick={handleClose}\n        >\n          Сохранить\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default JournalRecordsDialog;\n","import React from 'react';\nimport useForm from 'src/hooks/useForm';\nimport JournalRecordsDialog from './JournalRecordsDialog';\n\nfunction JournalRecordsEditDialogContainer({\n  show,\n  journalRecord,\n  handleSubmit: handleSubmitProp,\n  ...rest\n}) {\n  const { inputs, setInputs, handleChange, handleSubmit } = useForm(\n    {\n      student_id: '',\n      study_plan_id: '',\n      in_time: '',\n      count: '',\n      mark_id: ''\n    },\n    () => {\n      handleSubmitProp({ id: journalRecord.id, ...inputs });\n    }\n  );\n\n  React.useEffect(() => {\n    if (show) {\n      setInputs({ ...journalRecord });\n    }\n  }, [show, setInputs, journalRecord]);\n\n  return (\n    <JournalRecordsDialog\n      show={show}\n      inputs={inputs}\n      handleChange={handleChange}\n      handleSubmit={handleSubmit}\n      {...rest}\n    />\n  );\n}\n\nexport default JournalRecordsEditDialogContainer;\n","import React from 'react';\nimport useForm from 'src/hooks/useForm';\nimport JournalRecordsDialog from './JournalRecordsDialog';\n\nfunction JournalAddDialogContainer({\n  show,\n  handleSubmit: handleSubmitProp,\n  ...rest\n}) {\n  const { inputs, handleChange, handleSubmit } = useForm(\n    {\n      student_id: '',\n      study_plan_id: '',\n      in_time: '',\n      count: '',\n      mark_id: 1\n    },\n    () => {\n      handleSubmitProp(inputs);\n    }\n  );\n\n  return (\n    <JournalRecordsDialog\n      show={show}\n      inputs={inputs}\n      handleChange={handleChange}\n      handleSubmit={handleSubmit}\n      {...rest}\n    />\n  );\n}\n\nexport default JournalAddDialogContainer;\n","import React, { Fragment } from 'react';\nimport { Table, ButtonGroup, Button } from 'react-bootstrap';\nimport JournalEditDialog from './JournalRecordsEditDialogContainer';\nimport JournalAddDialog from './JournalRecordsAddDialogContainer';\n\nfunction JournalRecords({\n  journalRecords,\n  handleDelete,\n  handleUpdate,\n  handleCreation\n}) {\n  const [editableJournalRecord, setEditableJournalRecord] = React.useState();\n\n  const [show1, setShow1] = React.useState(false);\n\n  const handleClose1 = () => setShow1(false);\n\n  const handleShow1 = journalRecord => () => {\n    setShow1(true);\n    setEditableJournalRecord(journalRecord);\n  };\n\n  const [show2, setShow2] = React.useState(false);\n\n  const handleClose2 = () => setShow2(false);\n\n  const handleShow2 = () => {\n    setShow2(true);\n  };\n\n  return (\n    <Fragment>\n      <Table bordered>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>ФИО студента</th>\n            <th>Предмет</th>\n            <th>Тип экзамена</th>\n            <th>Вовремя</th>\n            <th>Оценка</th>\n            <th>Пересдач</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {journalRecords.map(journalRecord => (\n            <tr key={journalRecord.id}>\n              <td>{journalRecord.id}</td>\n              <td>{journalRecord.student_full_name}</td>\n              <td>{journalRecord.subject_short_name}</td>\n              <td>{journalRecord.exam_type}</td>\n              <td>{journalRecord.in_time ? 'Да' : 'Нет'}</td>\n              <td>{journalRecord.mark_name}</td>\n              <td>{journalRecord.count}</td>\n              <td>\n                <ButtonGroup>\n                  <Button onClick={handleShow1(journalRecord)}>\n                    Редактировать\n                  </Button>\n                  <Button\n                    onClick={handleDelete(journalRecord.id)}\n                    variant=\"danger\"\n                  >\n                    Удалить\n                  </Button>\n                </ButtonGroup>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <Button\n        onClick={handleShow2}\n        style={{ position: 'fixed', bottom: 24, right: 24 }}\n      >\n        Создать\n      </Button>\n      <JournalEditDialog\n        show={show1}\n        handleClose={handleClose1}\n        journalRecord={editableJournalRecord}\n        handleSubmit={handleUpdate}\n      />\n      <JournalAddDialog\n        show={show2}\n        handleClose={handleClose2}\n        handleSubmit={handleCreation}\n      />\n    </Fragment>\n  );\n}\n\nexport default JournalRecords;\n","import React from 'react';\nimport journalRecordController from 'src/services/journalRecordController';\nimport Journal from './JournalRecords';\n\nfunction JournalRecordsContainer() {\n  const [journalRecords, setJournalRecords] = React.useState([]);\n\n  React.useEffect(() => {\n    journalRecordController.getAll().then(journalRecords => {\n      if (journalRecords) {\n        setJournalRecords(journalRecords);\n      }\n    });\n  }, []);\n\n  const handleDelete = id => () => {\n    journalRecordController.delete(id).then(result => {\n      if (result === 0) {\n        setJournalRecords(\n          journalRecords.filter(journalRecord => journalRecord.id !== id)\n        );\n      }\n    });\n  };\n\n  const handleUpdate = newJournalRecord => {\n    journalRecordController\n      .update(newJournalRecord.id, newJournalRecord)\n      .then(result => {\n        if (result === 0) {\n          journalRecordController\n            .get(newJournalRecord.id)\n            .then(updatedJournalRecord => {\n              setJournalRecords(\n                journalRecords.map(journalRecord => {\n                  if (journalRecord.id === updatedJournalRecord.id) {\n                    return updatedJournalRecord;\n                  }\n                  return journalRecord;\n                })\n              );\n            });\n        }\n      });\n  };\n\n  const handleCreation = newJournalRecord => {\n    journalRecordController.create(newJournalRecord).then(id => {\n      if (id !== undefined) {\n        journalRecordController.get(id).then(journalRecord => {\n          setJournalRecords([...journalRecords, journalRecord]);\n        });\n      }\n    });\n  };\n\n  return (\n    <Journal\n      journalRecords={journalRecords}\n      handleDelete={handleDelete}\n      handleUpdate={handleUpdate}\n      handleCreation={handleCreation}\n    />\n  );\n}\n\nexport default JournalRecordsContainer;\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\n\nconst markColorsMap = {\n  5: '#c5e1a5',\n  4: '#fff59d',\n  3: '#ffcc80',\n  2: '#ffab91',\n  з: '#c5e1a5',\n  н: '#ffab91'\n};\n\nfunction StudentsJournal({ studentsJournal, subjects }) {\n  return (\n    <Table bordered>\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>ФИО студента</th>\n          {subjects.map(subject => (\n            <th key={subject}>{subject}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {studentsJournal.map(studentRecord => (\n          <tr key={studentRecord.id}>\n            <td>{studentRecord.id}</td>\n            <td>{studentRecord.student_full_name}</td>\n            {subjects.map(subject => {\n              const examData = studentRecord[subject];\n              const markValue = examData && examData.mark_value;\n              const examType = examData && examData.exam_type;\n              const count = examData && examData.count;\n\n              return (\n                <td\n                  key={subject}\n                  style={{\n                    position: 'relative',\n                    backgroundColor: markColorsMap[markValue]\n                  }}\n                >\n                  {markValue}\n                  <span\n                    style={{\n                      fontSize: 12,\n                      position: 'absolute',\n                      top: 0,\n                      right: 0,\n                      backgroundColor: '#fff'\n                    }}\n                  >\n                    {examType}\n                  </span>\n                  <span\n                    style={{\n                      fontSize: 10,\n                      position: 'absolute',\n                      bottom: 0,\n                      right: 0\n                    }}\n                  >\n                    {count > 0 && `Пересдач: ${count}`}\n                  </span>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default StudentsJournal;\n","import React from 'react';\n\nimport { Form } from 'react-bootstrap';\n\nfunction Filter({ studyGroups, inputs, handleChange }) {\n  return (\n    <Form>\n      <Form.Group controlId=\"study-groups\">\n        <Form.Label>Группы</Form.Label>\n        <Form.Control\n          name=\"study_group_id\"\n          as=\"select\"\n          onChange={handleChange}\n          value={inputs.study_group_id}\n        >\n          <option value={-1}>*</option>\n          {studyGroups.map(studyGroup => (\n            <option key={studyGroup.id} value={studyGroup.id}>\n              {studyGroup.name}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      <Form.Group controlId=\"sort-options\">\n        <Form.Label>Сортировка</Form.Label>\n        <Form.Control\n          name=\"sort_option\"\n          as=\"select\"\n          onChange={handleChange}\n          value={inputs.sort_option}\n        >\n          <option value={0}>По алфавиту</option>\n          <option value={1}>По убыванию оценок</option>\n        </Form.Control>\n      </Form.Group>\n    </Form>\n  );\n}\n\nexport default Filter;\n","import React, { Fragment } from 'react';\nimport useForm from 'src/hooks/useForm';\nimport journalRecordController from 'src/services/journalRecordController';\nimport studyGroupController from 'src/services/studyGroupController';\nimport StudentsJournal from './StudentsJournal';\nimport Filter from './Filter';\n\nfunction StudentsJournalContainer() {\n  const [studentsJournal, setStudentsJournal] = React.useState([]);\n  const [sortedStudentsJournal, setSortedStudentsJournal] = React.useState([]);\n  const [subjects, setSubjects] = React.useState([]);\n  const [studyGroups, setStudyGroups] = React.useState([]);\n\n  React.useEffect(() => {\n    studyGroupController.getAll().then(studyGroups => {\n      if (studyGroups) {\n        setStudyGroups(studyGroups);\n      }\n    });\n  }, []);\n\n  const { inputs, handleChange } = useForm({\n    study_group_id: '-1',\n    sort_option: '0'\n  });\n\n  React.useEffect(() => {\n    const handleResult = journalRecords => {\n      const studentsMap = {};\n      const subjectsMap = {};\n\n      journalRecords.forEach(journalRecord => {\n        subjectsMap[journalRecord.subject_short_name] = true;\n\n        const studentsMapRecord = studentsMap[journalRecord.student_id];\n        const examData = {\n          exam_type: journalRecord.exam_type,\n          mark_value: journalRecord.mark_value,\n          count: journalRecord.count\n        };\n\n        if (studentsMapRecord) {\n          studentsMapRecord[journalRecord.subject_short_name] = examData;\n          studentsMapRecord.marks_sum += +journalRecord.mark_value || 0;\n        } else {\n          studentsMap[journalRecord.student_id] = {\n            id: journalRecord.student_id,\n            student_full_name: journalRecord.student_full_name,\n            marks_sum: +journalRecord.mark_value || 0,\n            [journalRecord.subject_short_name]: examData\n          };\n        }\n      });\n\n      setStudentsJournal(Object.values(studentsMap));\n      setSubjects(Object.keys(subjectsMap));\n    };\n\n    if (inputs.study_group_id !== '-1') {\n      journalRecordController\n        .getAllByStudyGroup(inputs.study_group_id)\n        .then(journalRecords => {\n          if (journalRecords) {\n            handleResult(journalRecords);\n          }\n        });\n    } else {\n      journalRecordController.getAll().then(handleResult);\n    }\n  }, [inputs.study_group_id]);\n\n  React.useEffect(() => {\n    const sortByName = studentsJournal => {\n      return studentsJournal.sort((studentRecord1, studentRecord2) =>\n        studentRecord1.student_full_name.localeCompare(\n          studentRecord2.student_full_name\n        )\n      );\n    };\n\n    console.log(studentsJournal);\n\n    const sortByMarksSum = studentsJournal => {\n      return studentsJournal.sort(\n        (studentRecord1, studentRecord2) =>\n          studentRecord2.marks_sum - studentRecord1.marks_sum\n      );\n    };\n\n    if (inputs.sort_option === '0') {\n      setSortedStudentsJournal(sortByName(studentsJournal.slice()));\n    } else {\n      setSortedStudentsJournal(sortByMarksSum(studentsJournal.slice()));\n    }\n  }, [inputs.sort_option, studentsJournal]);\n\n  return (\n    <Fragment>\n      <Filter\n        studyGroups={studyGroups}\n        inputs={inputs}\n        handleChange={handleChange}\n      />\n      <StudentsJournal\n        studentsJournal={sortedStudentsJournal}\n        subjects={subjects}\n      />\n    </Fragment>\n  );\n}\n\nexport default StudentsJournalContainer;\n","import 'bootstrap/dist/css/bootstrap.css';\n\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport ErrorBoundary from 'src/ErrorBoundary';\nimport Students from 'src/routes/Students';\nimport StudyGroups from 'src/routes/StudyGroups';\nimport JournalRecords from 'src/routes/JournalRecords';\nimport StudentsJournal from 'src/routes/StudentsJournal';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ErrorBoundary>\n        <Router>\n          <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"/\">@Narcologer</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link as={Link} to=\"/study_groups\">\n                  Группы\n                </Nav.Link>\n                <Nav.Link as={Link} to=\"/students\">\n                  Студенты\n                </Nav.Link>\n                <Nav.Link as={Link} to=\"/journal_records\">\n                  Записи журнала\n                </Nav.Link>\n                <Nav.Link as={Link} to=\"/journal\">\n                  Журнал\n                </Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/students\" />\n            </Route>\n            <Route path=\"/study_groups\">\n              <StudyGroups />\n            </Route>\n            <Route path=\"/students\">\n              <Students />\n            </Route>\n            <Route path=\"/journal_records\">\n              <JournalRecords />\n            </Route>\n            <Route path=\"/journal\">\n              <StudentsJournal />\n            </Route>\n          </Switch>\n        </Router>\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}